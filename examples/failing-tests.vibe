# Failing tests to verify test runner correctly reports failures

# Define some functions for testing
let add x y = x + y
let multiply x y = x * y

# This test should fail - wrong assertion
(test "failing addition test" (fn dummy = 
  assert (add 2 3 == 6) "2 + 3 should equal 6 (this will fail)"
))

# This test should fail - type error in assertion
(test "type error test" (fn dummy =
  assert (add "hello" "world") "Trying to add strings with int addition"
))

# This test should fail - undefined variable
(test "undefined variable test" (fn dummy =
  assert (someUndefinedFunction 42 == 42) "Using undefined function"
))

# This test should pass to show mixed results
(test "passing test" (fn dummy =
  assert (multiply 3 4 == 12) "3 * 4 equals 12"
))

# This test should fail - runtime error (division by zero)
(test "division by zero test" (fn dummy =
  let divideByZero x = x / 0 in
  assert (divideByZero 10 == 0) "Division by zero should fail"
))

# This test should fail - wrong comparison
(test "string comparison fail" (fn dummy =
  assert ("hello" == "world") "hello should not equal world"
))