# Working top-level test example

# Define functions to test
let add x y = x + y
let multiply x y = x * y

# Define list length function for testing
rec length lst = 
  match lst {
    [] -> 0
    h :: t -> 1 + (length t)
  }

# Top-level test calls with proper parentheses
(test "addition test" (fn dummy = 
  assert (add 2 3 == 5) "2 + 3 should equal 5"
))

(test "multiplication test" (fn dummy =
  assert (multiply 3 4 == 12) "3 * 4 should equal 12"
))

# More complex test
(test "list operations" (fn dummy =
  let lst = [1, 2, 3] in
  let result = length lst in
  assert (result == 3) "List should have 3 elements"
))