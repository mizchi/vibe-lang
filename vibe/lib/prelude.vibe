# Vibe Language Prelude
# Core functions available by default

# Function composition
let compose f g x = f (g x)

# Identity function
let id x = x

# Constant function  
let const x _ = x

# Flip function arguments
let flip f x y = f y x

# Function application operator
let ($) f x = f x

# Pipeline operator (reverse application)
let (|>) x f = f x

# Boolean operations
let not b = if b { false } else { true }
let (&&) a b = if a { b } else { false }
let (||) a b = if a { true } else { b }

# Basic combinators
let curry f x y = f (x, y)
let uncurry f (x, y) = f x y

# Export all functions
export compose, id, const, flip, ($), (|>), not, (&&), (||), curry, uncurry